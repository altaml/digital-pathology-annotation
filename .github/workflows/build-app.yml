name: Build Label Studio image

env:
  REPOSITORY_NAME: digital-pathology/label-studio
  DOCKERFILE_PATH: Dockerfile
  DOCKER_ROOT_PATH: .

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Determine image tag
      run: |
        echo "DO_DEPLOY=${{ github.ref=='refs/heads/master' || contains(github.ref,'refs/tags/') }}" >> $GITHUB_ENV
        if [ "${{ contains(github.ref,'refs/tags/') }}" == "true" ]
        then
          tag="${{github.ref}}"
          echo "IMAGE_TAG=release-${tag:10}" >> $GITHUB_ENV
        else
          echo "IMAGE_TAG=dev-${{ github.sha }}" >> $GITHUB_ENV
        fi
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build --build-arg -t $REPOSITORY_NAME:$IMAGE_TAG -f $DOCKERFILE_PATH $DOCKER_ROOT_PATH
    - name: Ensure the repository has been created
      if: ${{ env.DO_DEPLOY=='true' }}
      run: |
        EXISTING=$(aws ecr describe-repositories | jq '.repositories[] | select(.repositoryName==env.REPOSITORY_NAME)')
        if [ "$EXISTING" = "" ]; then
          aws ecr create-repository --repository-name ${REPOSITORY_NAME}
        fi
    - name: Tag, and push image to Amazon ECR
      if: ${{ env.DO_DEPLOY=='true' }}
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker tag $REPOSITORY_NAME:$IMAGE_TAG $ECR_REGISTRY/$REPOSITORY_NAME:$IMAGE_TAG
        docker push $ECR_REGISTRY/$REPOSITORY_NAME:$IMAGE_TAG